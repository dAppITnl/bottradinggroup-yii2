<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace backend\models\base;

use Yii;
use yii\behaviors\TimestampBehavior;

/**
 * This is the base-model class for table "usermember".
 *
 * @property integer $id
 * @property integer $umbusr_id
 * @property integer $umbmbr_id
 * @property integer $umbprl_id
 * @property integer $umbupy_id
 * @property integer $umb_active
 * @property string $umb_name
 * @property string $umb_roles
 * @property string $umb_startdate
 * @property string $umb_enddate
 * @property string $umb_paystartdate
 * @property string $umb_payenddate
 * @property integer $umb_maxsignals
 * @property string $umb_remarks
 * @property integer $umb_lock
 * @property string $umb_createdt
 * @property integer $umbusr_created_id
 * @property string $umb_updatedt
 * @property integer $umbusr_updated_id
 * @property integer $umb_deletedat
 * @property string $umb_deletedt
 * @property integer $umbusr_deleted_id
 * @property integer $umb_createdat
 * @property integer $umb_updatedat
 *
 * @property \backend\models\Membership $umbmbr
 * @property \backend\models\Pricelist $umbprl
 * @property \backend\models\Userpay $umbupy
 * @property \backend\models\User $umbusr
 * @property \backend\models\User $umbusrCreated
 * @property \backend\models\User $umbusrDeleted
 * @property \backend\models\User $umbusrUpdated
 * @property \backend\models\Userbot[] $userbots
 * @property \backend\models\Userpay[] $userpays
 * @property string $aliasModel
 */
abstract class Usermember extends \yii\db\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'usermember';
    }

    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            [
                'class' => TimestampBehavior::className(),
                'createdAtAttribute' => 'umb_createdat',
                'updatedAtAttribute' => 'umb_updatedat',
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['umbusr_id', 'umbmbr_id', 'umbprl_id', 'umb_name', 'umb_createdt', 'umbusr_created_id', 'umb_updatedt', 'umbusr_updated_id'], 'required'],
            [['umbusr_id', 'umbmbr_id', 'umbprl_id', 'umbupy_id', 'umb_active', 'umb_maxsignals', 'umb_lock', 'umbusr_created_id', 'umbusr_updated_id', 'umb_deletedat', 'umbusr_deleted_id'], 'integer'],
            [['umb_startdate', 'umb_enddate', 'umb_paystartdate', 'umb_payenddate', 'umb_createdt', 'umb_updatedt', 'umb_deletedt'], 'safe'],
            [['umb_remarks'], 'string'],
            [['umb_name', 'umb_roles'], 'string', 'max' => 64],
						[['umbusr_id', 'umbmbr_id', 'umb_deletedat'], 'unique', 'targetAttribute' => ['umbusr_id', 'umbmbr_id', 'umb_deletedat']],
            [['umbmbr_id'], 'exist', 'skipOnError' => true, 'targetClass' => \backend\models\Membership::className(), 'targetAttribute' => ['umbmbr_id' => 'id']],
            [['umbprl_id'], 'exist', 'skipOnError' => true, 'targetClass' => \backend\models\Pricelist::className(), 'targetAttribute' => ['umbprl_id' => 'id']],
						[['umbupy_id'], 'exist', 'skipOnError' => true, 'targetClass' => \backend\models\Userpay::className(), 'targetAttribute' => ['umbupy_id' => 'id']],
            [['umbusr_created_id'], 'exist', 'skipOnError' => true, 'targetClass' => \backend\models\User::className(), 'targetAttribute' => ['umbusr_created_id' => 'id']],
            [['umbusr_deleted_id'], 'exist', 'skipOnError' => true, 'targetClass' => \backend\models\User::className(), 'targetAttribute' => ['umbusr_deleted_id' => 'id']],
            [['umbusr_id'], 'exist', 'skipOnError' => true, 'targetClass' => \backend\models\User::className(), 'targetAttribute' => ['umbusr_id' => 'id']],
            [['umbusr_updated_id'], 'exist', 'skipOnError' => true, 'targetClass' => \backend\models\User::className(), 'targetAttribute' => ['umbusr_updated_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('models', 'ID'),
            'umbusr_id' => Yii::t('models', 'User'),
            'umbmbr_id' => Yii::t('models', 'Membership'),
            'umbprl_id' => Yii::t('models', 'Price'),
						'umbupy_id' => Yii::t('models', 'Userpay'),
            'umb_active' => Yii::t('models', 'Active'),
            'umb_name' => Yii::t('models', 'Name'),
            'umb_roles' => Yii::t('models', 'Roles'),
            'umb_startdate' => Yii::t('models', 'Startdate'),
            'umb_enddate' => Yii::t('models', 'Enddate'),
						'umb_paystartdate' => Yii::t('models', 'PayStartdate'),
						'umb_payenddate' => Yii::t('models', 'PayEnddate'),
            'umb_maxsignals' => Yii::t('models', 'MaxSignals'),
            'umb_remarks' => Yii::t('models', 'Remarks'),
            'umb_lock' => Yii::t('models', 'Lock'),
            'umb_createdat' => Yii::t('models', 'CreatedAt'),
            'umb_createdt' => Yii::t('models', 'Created'),
            'umbusr_created_id' => Yii::t('models', 'CreatedBy'),
            'umb_updatedat' => Yii::t('models', 'UpdatedAt'),
            'umb_updatedt' => Yii::t('models', 'Updated'),
            'umbusr_updated_id' => Yii::t('models', 'UpdatedBy'),
            'umb_deletedat' => Yii::t('models', 'DeletedAt'),
            'umb_deletedt' => Yii::t('models', 'Deleted'),
            'umbusr_deleted_id' => Yii::t('models', 'DeletedBy'),
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeHints()
    {
        return array_merge(parent::attributeHints(), [
        /*    'id' => Yii::t('models', 'ID'),
            'umbusr_id' => Yii::t('models', 'User'),
            'umbmbr_id' => Yii::t('models', 'Membership'),
            'umbprl_id' => Yii::t('models', 'Price'),
						'umbupy_id' => Yii::t('models', 'Userpay'),
            'umb_active' => Yii::t('models', 'Active'),
            'umb_name' => Yii::t('models', 'Name'),
            'umb_roles' => Yii::t('models', 'Roles'),
            'umb_startdate' => Yii::t('models', 'Startdate'),
            'umb_enddate' => Yii::t('models', 'Enddate'),
						'umb_paystartdate' => Yii::t('models', 'PayStartdate'),
						'umb_payenddate' => Yii::t('models', 'PayEnddate'),
            'umb_maxsignals' => Yii::t('models', 'MaxSignals'),
            'umb_remarks' => Yii::t('models', 'Remarks'),
            'umb_lock' => Yii::t('models', 'Lock'),
            'umb_createdat' => Yii::t('models', 'CreatedAt'),
            'umb_createdt' => Yii::t('models', 'Created'),
            'umbusr_created_id' => Yii::t('models', 'CreatedBy'),
            'umb_updatedat' => Yii::t('models', 'UpdatedAt'),
            'umb_updatedt' => Yii::t('models', 'Updated'),
            'umbusr_updated_id' => Yii::t('models', 'UpdatedBy'),
            'umb_deletedat' => Yii::t('models', 'DeletedAt'),
            'umb_deletedt' => Yii::t('models', 'Deleted'),
            'umbusr_deleted_id' => Yii::t('models', 'DeletedBy'),  */
        ]);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUmbmbr()
    {
        return $this->hasOne(\backend\models\Membership::className(), ['id' => 'umbmbr_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUmbprl()
    {
        return $this->hasOne(\backend\models\Pricelist::className(), ['id' => 'umbprl_id']);
    }

		/**
		 * @return \yii\db\ActiveQuery
		 */
		public function getUmbupy()
		{
		    return $this->hasOne(\backend\models\Userpay::className(), ['id' => 'umbupy_id']);
		}

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUmbusr()
    {
        return $this->hasOne(\backend\models\User::className(), ['id' => 'umbusr_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUmbusrCreated()
    {
        return $this->hasOne(\backend\models\User::className(), ['id' => 'umbusr_created_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUmbusrDeleted()
    {
        return $this->hasOne(\backend\models\User::className(), ['id' => 'umbusr_deleted_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUmbusrUpdated()
    {
        return $this->hasOne(\backend\models\User::className(), ['id' => 'umbusr_updated_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUserbots()
    {
        return $this->hasMany(\backend\models\Userbot::className(), ['ubtumb_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUserpays()
    {
        return $this->hasMany(\backend\models\Userpay::className(), ['upyumb_id' => 'id']);
    }


    
    /**
     * @inheritdoc
     * @return \backend\models\UsermemberQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \backend\models\UsermemberQuery(get_called_class());
    }


}
