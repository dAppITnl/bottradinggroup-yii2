<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace backend\models\base;

use Yii;
use yii\behaviors\BlameableBehavior;
use yii\behaviors\TimestampBehavior;

/**
 * This is the base-model class for table "botsignal".
 *
 * @property integer $id
 * @property integer $bsgubt_id
 * @property integer $bsgsig_id
 * @property integer $bsg_active
 * @property string $bsg_remarks
 * @property integer $bsg_lock
 * @property string $bsg_createdt
 * @property string $bsg_updatedt
 * @property integer $bsg_deletedat
 * @property string $bsg_deletedt
 * @property integer $bsgusr_deleted_id
 * @property integer $bsg_createdat
 * @property integer $bsgusr_created_id
 * @property integer $bsg_updatedat
 * @property integer $bsgusr_updated_id
 *
 * @property \backend\models\Signal $bsgsig
 * @property \backend\models\Userbot $bsgubt
 * @property \backend\models\User $bsgusrCreated
 * @property \backend\models\User $bsgusrDeleted
 * @property \backend\models\User $bsgusrUpdated
 * @property \backend\models\Signallog[] $signallogs
 * @property string $aliasModel
 */
abstract class Botsignal extends \yii\db\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'botsignal';
    }

    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            [
                'class' => BlameableBehavior::className(),
                'createdByAttribute' => 'bsgusr_created_id',
                'updatedByAttribute' => 'bsgusr_updated_id',
            ],
            [
                'class' => TimestampBehavior::className(),
                'createdAtAttribute' => 'bsg_createdat',
                'updatedAtAttribute' => 'bsg_updatedat',
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['bsgubt_id', 'bsgsig_id', 'bsg_createdt', 'bsg_updatedt'], 'required'],
            [['bsgubt_id', 'bsgsig_id', 'bsg_active', 'bsg_lock', 'bsg_deletedat', 'bsgusr_deleted_id'], 'integer'],
            [['bsg_remarks'], 'string'],
            [['bsg_createdt', 'bsg_updatedt', 'bsg_deletedt'], 'safe'],
            [['bsgubt_id', 'bsgsig_id'], 'unique', 'targetAttribute' => ['bsgubt_id', 'bsgsig_id']],
            [['bsgsig_id'], 'exist', 'skipOnError' => true, 'targetClass' => \backend\models\Signal::className(), 'targetAttribute' => ['bsgsig_id' => 'id']],
            [['bsgubt_id'], 'exist', 'skipOnError' => true, 'targetClass' => \backend\models\Userbot::className(), 'targetAttribute' => ['bsgubt_id' => 'id']],
            [['bsgusr_created_id'], 'exist', 'skipOnError' => true, 'targetClass' => \backend\models\User::className(), 'targetAttribute' => ['bsgusr_created_id' => 'id']],
            [['bsgusr_deleted_id'], 'exist', 'skipOnError' => true, 'targetClass' => \backend\models\User::className(), 'targetAttribute' => ['bsgusr_deleted_id' => 'id']],
            [['bsgusr_updated_id'], 'exist', 'skipOnError' => true, 'targetClass' => \backend\models\User::className(), 'targetAttribute' => ['bsgusr_updated_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('models', 'ID'),
            'bsgubt_id' => Yii::t('models', 'Userbot'),
            'bsgsig_id' => Yii::t('models', 'Signal'),
            'bsg_active' => Yii::t('models', 'Active'),
            'bsg_remarks' => Yii::t('models', 'Remarks'),
            'bsg_lock' => Yii::t('models', 'Lock'),
            'bsg_createdat' => Yii::t('models', 'CreatedAt'),
            'bsg_createdt' => Yii::t('models', 'Created'),
            'bsgusr_created_id' => Yii::t('models', 'CreatedBy'),
            'bsg_updatedat' => Yii::t('models', 'UpdatedAt'),
            'bsg_updatedt' => Yii::t('models', 'Updated'),
            'bsgusr_updated_id' => Yii::t('models', 'UpdatedBy'),
            'bsg_deletedat' => Yii::t('models', 'DeletedAt'),
            'bsg_deletedt' => Yii::t('models', 'Deleted'),
            'bsgusr_deleted_id' => Yii::t('models', 'DeletedBy'),
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeHints()
    {
        return array_merge(parent::attributeHints(), [
        /*    'id' => Yii::t('models', 'ID'),
            'bsgubt_id' => Yii::t('models', 'Userbot'),
            'bsgsig_id' => Yii::t('models', 'Signal'),
            'bsg_active' => Yii::t('models', 'Active'),
            'bsg_remarks' => Yii::t('models', 'Remarks'),
            'bsg_lock' => Yii::t('models', 'Lock'),
            'bsg_createdat' => Yii::t('models', 'CreatedAt'),
            'bsg_createdt' => Yii::t('models', 'Created'),
            'bsgusr_created_id' => Yii::t('models', 'CreatedBy'),
            'bsg_updatedat' => Yii::t('models', 'UpdatedAt'),
            'bsg_updatedt' => Yii::t('models', 'Updated'),
            'bsgusr_updated_id' => Yii::t('models', 'UpdatedBy'),
            'bsg_deletedat' => Yii::t('models', 'DeletedAt'),
            'bsg_deletedt' => Yii::t('models', 'Deleted'),
            'bsgusr_deleted_id' => Yii::t('models', 'DeletedBy'), */
        ]);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getBsgsig()
    {
        return $this->hasOne(\backend\models\Signal::className(), ['id' => 'bsgsig_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getBsgubt()
    {
        return $this->hasOne(\backend\models\Userbot::className(), ['id' => 'bsgubt_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getBsgusrCreated()
    {
        return $this->hasOne(\backend\models\User::className(), ['id' => 'bsgusr_created_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getBsgusrDeleted()
    {
        return $this->hasOne(\backend\models\User::className(), ['id' => 'bsgusr_deleted_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getBsgusrUpdated()
    {
        return $this->hasOne(\backend\models\User::className(), ['id' => 'bsgusr_updated_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getSignallogs()
    {
        return $this->hasMany(\backend\models\Signallog::className(), ['slgbsg_id' => 'id']);
    }


    
    /**
     * @inheritdoc
     * @return \backend\models\BotsignalQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \backend\models\BotsignalQuery(get_called_class());
    }


}
