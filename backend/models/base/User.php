<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace backend\models\base;

use Yii;
use yii\behaviors\BlameableBehavior;
use yii\behaviors\TimestampBehavior;

/**
 * This is the base-model class for table "user".
 *
 * @property integer $id
 * @property string $usr_language
 * @property integer $status
 * @property string $username
 * @property string $usr_password
 * @property string $usr_2fasecret
 * @property string $email
 * @property string $usr_firstname
 * @property string $usr_lastname
 * @property string $usr_countrycode
 * @property string $usr_sitelevel
 * @property string $usr_sitecsstheme
 * @property integer $usr_signalactive
 * @property string $usr_moralisid
 * @property string $usr_discordusername
 * @property string $usr_discordnick
 * @property string $usr_discordjoinedat
 * @property integer $usr_discordid
 * @property string $usr_discordroles
 * @property string $password_hash
 * @property string $password_reset_token
 * @property string $auth_key
 * @property string $verification_token
 * @property string $usr_remarks
 * @property integer $usr_lock
 * @property string $usr_createdt
 * @property string $usr_updatedt
 * @property integer $deleted_at
 * @property string $usr_deletedt
 * @property integer $deleted_by
 * @property integer $created_at
 * @property integer $created_by
 * @property integer $updated_at
 * @property integer $updated_by
 *
 * @property \backend\models\Botsignal[] $botsignals
 * @property \backend\models\Botsignal[] $botsignals0
 * @property \backend\models\Botsignal[] $botsignals1
 * @property \backend\models\Category[] $categories
 * @property \backend\models\Category[] $categories0
 * @property \backend\models\Category[] $categories1
 * @property \backend\models\User $createdBy
 * @property \backend\models\Cryptoaddress[] $cryptoaddresses
 * @property \backend\models\Cryptoaddress[] $cryptoaddresses0
 * @property \backend\models\Cryptoaddress[] $cryptoaddresses1
 * @property \backend\models\Cryptoaddress[] $cryptoaddresses2
 * @property \backend\models\User $deletedBy
 * @property \backend\models\Membership[] $memberships
 * @property \backend\models\Membership[] $memberships0
 * @property \backend\models\Membership[] $memberships1
 * @property \backend\models\Pricelist[] $pricelists
 * @property \backend\models\Pricelist[] $pricelists0
 * @property \backend\models\Pricelist[] $pricelists1
 * @property \backend\models\Signallog[] $signallogs
 * @property \backend\models\Signallog[] $signallogs0
 * @property \backend\models\Signallog[] $signallogs1
 * @property \backend\models\Signal[] $signals
 * @property \backend\models\Signal[] $signals0
 * @property \backend\models\Signal[] $signals1
 * @property \backend\models\Symbol[] $symbols
 * @property \backend\models\Symbol[] $symbols0
 * @property \backend\models\Symbol[] $symbols1
 * @property \backend\models\User $updatedBy
 * @property \backend\models\Userbot[] $userbots
 * @property \backend\models\Userbot[] $userbots0
 * @property \backend\models\Userbot[] $userbots1
 * @property \backend\models\Usermember[] $usermembers
 * @property \backend\models\Usermember[] $usermembers0
 * @property \backend\models\Usermember[] $usermembers1
 * @property \backend\models\Usermember[] $usermembers2
 * @property \backend\models\Userpay[] $userpays
 * @property \backend\models\Userpay[] $userpays0
 * @property \backend\models\Userpay[] $userpays1
 * @property \backend\models\Userpay[] $userpays2
 * @property \backend\models\User[] $users
 * @property \backend\models\User[] $users0
 * @property \backend\models\User[] $users1
 * @property string $aliasModel
 */
abstract class User extends \yii\db\ActiveRecord
{



    /**
    * ENUM field values
    */
    const USR_SITELEVEL_DEV = 'dev';
    const USR_SITELEVEL_SUPERADMIN = 'superadmin';
    const USR_SITELEVEL_ADMIN = 'admin';
    const USR_SITELEVEL_SUPPORT = 'support';
		const USR_SITELEVEL_BTESTER = 'btester';
		const USR_SITELEVEL_ATESTER = 'atester';
    const USR_SITELEVEL_MEMBER = 'member';
		const USR_SITELEVEL_HFTMEMBER = 'hftmember';
    const USR_SITELEVEL_USER = 'user';
    const USR_SITELEVEL_GUEST = 'guest';
    const USR_SITELEVEL_NONE = 'none';
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'user';
    }

    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            [
                'class' => BlameableBehavior::className(),
            ],
            [
                'class' => TimestampBehavior::className(),
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['status', 'username', 'usr_password', 'email', 'usr_signalactive', 'password_hash', 'auth_key', 'usr_createdt', 'usr_updatedt'], 'required'],
            [['status', 'usr_signalactive', 'usr_discordid', 'usr_lock', 'deleted_at', 'deleted_by'], 'integer'],
            [['usr_sitelevel', /*'usr_discordroles',*/ 'usr_remarks'], 'string'],
            [['usr_discordjoinedat', 'usr_discordroles', 'usr_createdt', 'usr_updatedt', 'usr_deletedt'], 'safe'],
            [['usr_language'], 'string', 'max' => 10],
            [['username', 'usr_password', 'usr_2fasecret', 'email', 'usr_moralisid', 'password_hash', 'password_reset_token', 'verification_token'], 'string', 'max' => 64],
            [['usr_sitecsstheme', 'auth_key'], 'string', 'max' => 32],
						[['usr_firstname', 'usr_lastname', 'usr_discordusername', 'usr_discordnick'], 'string', 'max' => 255],
						[['usr_countrycode'], 'string', 'max' => 3],
            [['username'], 'unique'],
            [['email'], 'unique'],
            [['created_by'], 'exist', 'skipOnError' => true, 'targetClass' => \backend\models\User::className(), 'targetAttribute' => ['created_by' => 'id']],
            [['deleted_by'], 'exist', 'skipOnError' => true, 'targetClass' => \backend\models\User::className(), 'targetAttribute' => ['deleted_by' => 'id']],
            [['updated_by'], 'exist', 'skipOnError' => true, 'targetClass' => \backend\models\User::className(), 'targetAttribute' => ['updated_by' => 'id']],
            ['usr_sitelevel', 'in', 'range' => [
                    self::USR_SITELEVEL_DEV,
                    self::USR_SITELEVEL_SUPERADMIN,
                    self::USR_SITELEVEL_ADMIN,
                    self::USR_SITELEVEL_SUPPORT,
										self::USR_SITELEVEL_BTESTER,
										self::USR_SITELEVEL_ATESTER,
                    self::USR_SITELEVEL_MEMBER,
										self::USR_SITELEVEL_HFTMEMBER,
                    self::USR_SITELEVEL_USER,
                    self::USR_SITELEVEL_GUEST,
                    self::USR_SITELEVEL_NONE,
                ]
            ]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('models', 'ID'),
            'usr_language' => Yii::t('models', 'Language'),
            'status' => Yii::t('models', 'Status'),
            'username' => Yii::t('models', 'Username'),
            'usr_password' => Yii::t('models', 'Password'),
            'usr_2fasecret' => Yii::t('models', '2FASecret'),
            'email' => Yii::t('models', 'Email'),
						'usr_firstname' => Yii::t('models', 'Firstname'),
						'usr_lastname' => Yii::t('models', 'Lastname'),
						'usr_countrycode' => Yii::t('models', 'Countrycode'),
            'usr_sitelevel' => Yii::t('models', 'SiteLevel'),
            'usr_sitecsstheme' => Yii::t('models', 'Site Theme'),
            'usr_signalactive' => Yii::t('models', 'SignalActive'),
            'usr_moralisid' => Yii::t('models', 'MoralisId'),
						'usr_discordusername' => Yii::t('models', 'DiscordUsername'),
						'usr_discordnick' => Yii::t('models', 'DiscordNick'),
						'usr_discordjoinedat' => Yii::t('models', 'DiscordJoinedAt'),
            'usr_discordid' => Yii::t('models', 'DiscordId'),
            'usr_discordroles' => Yii::t('models', 'DiscordRoles'),
            'password_hash' => Yii::t('models', 'PasswordHash'),
            'password_reset_token' => Yii::t('models', 'PasswordReset'),
            'auth_key' => Yii::t('models', 'Authkey'),
            'verification_token' => Yii::t('models', 'VerificationToken'),
            'usr_remarks' => Yii::t('models', 'Remarks'),
            'usr_lock' => Yii::t('models', 'Lock'),
            'created_at' => Yii::t('models', 'CreatedAt'),
            'usr_createdt' => Yii::t('models', 'Created'),
            'created_by' => Yii::t('models', 'CreatedBy'),
            'updated_at' => Yii::t('models', 'UpdatedAt'),
            'usr_updatedt' => Yii::t('models', 'Updated'),
            'updated_by' => Yii::t('models', 'UpdatedBy'),
            'deleted_at' => Yii::t('models', 'DeletedAt'),
            'usr_deletedt' => Yii::t('models', 'Deleted'),
            'deleted_by' => Yii::t('models', 'DeletedBy'),
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeHints()
    {
        return array_merge(parent::attributeHints(), [
        /*    'id' => Yii::t('models', 'ID'),
            'usr_language' => Yii::t('models', 'Language'),
            'status' => Yii::t('models', 'Status'),
            'username' => Yii::t('models', 'Username'),
            'usr_password' => Yii::t('models', 'Password'),
            'usr_2fasecret' => Yii::t('models', '2FASecret'),
            'email' => Yii::t('models', 'Email'),
				*/		'usr_firstname' => Yii::t('models', 'For (crypto) payments via Utrust'),
						'usr_lastname' => Yii::t('models', 'For (crypto) payments via Utrust'),
						'usr_countrycode' => Yii::t('models', 'For (crypto) payments via Utrust: 2 letters ISO-code (ex.: NL)')
        /*    'usr_sitelevel' => Yii::t('models', 'SiteLevel'),
            'usr_sitecsstheme' => Yii::t('models', 'SiteCssTheme'),
            'usr_signalactive' => Yii::t('models', 'SignalActive'),
            'usr_moralisid' => Yii::t('models', 'MoralisId'),
						'usr_discordusername' => Yii::t('models', 'DiscordUsername'),
						'usr_discordnick' => Yii::t('models', 'DiscordNick'),
						'usr_discordjoinedat' => Yii::t('models', 'DiscordJoinedAt'),
            'usr_discordid' => Yii::t('models', 'DiscordId'),
            'usr_discordroles' => Yii::t('models', 'DiscordRoles'),
            'password_hash' => Yii::t('models', 'PasswordHash'),
            'password_reset_token' => Yii::t('models', 'PasswordReset'),
            'auth_key' => Yii::t('models', 'Authkey'),
            'verification_token' => Yii::t('models', 'VerificationToken'),
            'usr_remarks' => Yii::t('models', 'Remarks'),
            'usr_lock' => Yii::t('models', 'Lock'),
            'created_at' => Yii::t('models', 'CreatedAt'),
            'usr_createdt' => Yii::t('models', 'Created'),
            'created_by' => Yii::t('models', 'CreatedBy'),
            'updated_at' => Yii::t('models', 'UpdatedAt'),
            'usr_updatedt' => Yii::t('models', 'Updated'),
            'updated_by' => Yii::t('models', 'UpdatedBy'),
            'deleted_at' => Yii::t('models', 'DeletedAt'),
            'usr_deletedt' => Yii::t('models', 'Deleted'),
            'deleted_by' => Yii::t('models', 'DeletedBy'),  */
        ]);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getBotsignals()
    {
        return $this->hasMany(\backend\models\Botsignal::className(), ['bsgusr_created_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getBotsignals0()
    {
        return $this->hasMany(\backend\models\Botsignal::className(), ['bsgusr_deleted_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getBotsignals1()
    {
        return $this->hasMany(\backend\models\Botsignal::className(), ['bsgusr_updated_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCategories()
    {
        return $this->hasMany(\backend\models\Category::className(), ['catusr_created_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCategories0()
    {
        return $this->hasMany(\backend\models\Category::className(), ['catusr_deleted_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCategories1()
    {
        return $this->hasMany(\backend\models\Category::className(), ['catusr_updated_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCreatedBy()
    {
        return $this->hasOne(\backend\models\User::className(), ['id' => 'created_by']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
		public function getCryptoaddresses()
		   {
		       return $this->hasMany(\backend\models\Cryptoaddress::className(), ['cadusr_created_id' => 'id']);
		   }

		   /**
		    * @return \yii\db\ActiveQuery
		    */
		   public function getCryptoaddresses0()
		   {
		       return $this->hasMany(\backend\models\Cryptoaddress::className(), ['cadusr_deleted_id' => 'id']);
		   }

		   /**
		    * @return \yii\db\ActiveQuery
		    */
		   public function getCryptoaddresses1()
		   {
		       return $this->hasMany(\backend\models\Cryptoaddress::className(), ['cadusr_owner_id' => 'id']);
		   }

		   /**
		    * @return \yii\db\ActiveQuery
		    */
		   public function getCryptoaddresses2()
		   {
		       return $this->hasMany(\backend\models\Cryptoaddress::className(), ['cadusr_updated_id' => 'id']);
		   }

		   /**
		    * @return \yii\db\ActiveQuery
		    */
    public function getDeletedBy()
    {
        return $this->hasOne(\backend\models\User::className(), ['id' => 'deleted_by']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getMemberships()
    {
        return $this->hasMany(\backend\models\Membership::className(), ['mbrusr_created_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getMemberships0()
    {
        return $this->hasMany(\backend\models\Membership::className(), ['mbrusr_deleted_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getMemberships1()
    {
        return $this->hasMany(\backend\models\Membership::className(), ['mbrusr_updated_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPricelists()
    {
        return $this->hasMany(\backend\models\Pricelist::className(), ['prlusr_created_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPricelists0()
    {
        return $this->hasMany(\backend\models\Pricelist::className(), ['prlusr_deleted_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPricelists1()
    {
        return $this->hasMany(\backend\models\Pricelist::className(), ['prlusr_updated_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getSignallogs()
    {
        return $this->hasMany(\backend\models\Signallog::className(), ['slgusr_created_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getSignallogs0()
    {
        return $this->hasMany(\backend\models\Signallog::className(), ['slgusr_deleted_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getSignallogs1()
    {
        return $this->hasMany(\backend\models\Signallog::className(), ['slgusr_updated_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getSignals()
    {
        return $this->hasMany(\backend\models\Signal::className(), ['sigusr_created_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getSignals0()
    {
        return $this->hasMany(\backend\models\Signal::className(), ['sigusr_deleted_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getSignals1()
    {
        return $this->hasMany(\backend\models\Signal::className(), ['sigusr_updated_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getSymbols()
    {
        return $this->hasMany(\backend\models\Symbol::className(), ['symusr_created_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getSymbols0()
    {
        return $this->hasMany(\backend\models\Symbol::className(), ['symusr_deleted_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getSymbols1()
    {
        return $this->hasMany(\backend\models\Symbol::className(), ['symusr_updated_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUpdatedBy()
    {
        return $this->hasOne(\backend\models\User::className(), ['id' => 'updated_by']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUserbots()
    {
        return $this->hasMany(\backend\models\Userbot::className(), ['ubtusr_created_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUserbots0()
    {
        return $this->hasMany(\backend\models\Userbot::className(), ['ubtusr_deleted_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUserbots1()
    {
        return $this->hasMany(\backend\models\Userbot::className(), ['ubtusr_updated_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUsermembers()
    {
        return $this->hasMany(\backend\models\Usermember::className(), ['umbusr_created_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUsermembers0()
    {
        return $this->hasMany(\backend\models\Usermember::className(), ['umbusr_deleted_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUsermembers1()
    {
        return $this->hasMany(\backend\models\Usermember::className(), ['umbusr_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUsermembers2()
    {
        return $this->hasMany(\backend\models\Usermember::className(), ['umbusr_updated_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUserpays()
    {
       return $this->hasMany(\backend\models\Userpay::className(), ['upyusr_id' => 'id']);
    }

		/**
		 * @return \yii\db\ActiveQuery
		 */
    public function getUserpays0()
    {
       return $this->hasMany(\backend\models\Userpay::className(), ['upyusr_created_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUserpays1()
    {
        return $this->hasMany(\backend\models\Userpay::className(), ['upyusr_deleted_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUserpays2()
    {
        return $this->hasMany(\backend\models\Userpay::className(), ['upyusr_updated_id' => 'id']);
    }


    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUsers()
    {
        return $this->hasMany(\backend\models\User::className(), ['created_by' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUsers0()
    {
        return $this->hasMany(\backend\models\User::className(), ['deleted_by' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUsers1()
    {
        return $this->hasMany(\backend\models\User::className(), ['updated_by' => 'id']);
    }



    /**
     * @inheritdoc
     * @return \backend\models\UserQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \backend\models\UserQuery(get_called_class());
    }


    /**
     * get column usr_sitelevel enum value label
     * @param string $value
     * @return string
     */
    public static function getUsrSitelevelValueLabel($value){
        $labels = self::optsUsrSitelevel();
        if(isset($labels[$value])){
            return $labels[$value];
        }
        return $value;
    }

    /**
     * column usr_sitelevel ENUM value labels
     * @return array
     */
    public static function optsUsrSitelevel()
    {
				return \common\helpers\GeneralHelper::getSiteLevels(true);
        /*return [
            self::USR_SITELEVEL_DEV => Yii::t('models', 'Dev'),
            self::USR_SITELEVEL_SUPERADMIN => Yii::t('models', 'Superadmin'),
            self::USR_SITELEVEL_ADMIN => Yii::t('models', 'Admin'),
            self::USR_SITELEVEL_SUPPORT => Yii::t('models', 'Support'),
						self::USR_SITELEVEL_BTESTER => Yii::t('models', 'Btester'),
						self::USR_SITELEVEL_ATESTER => Yii::t('models', 'Atester'),
            self::USR_SITELEVEL_MEMBER => Yii::t('models', 'Member'),
						self::USR_SITELEVEL_HFTMEMBER => Yii::t('models', 'HFTMember'),
            self::USR_SITELEVEL_USER => Yii::t('models', 'User'),
            self::USR_SITELEVEL_GUEST => Yii::t('models', 'Guest'),
            self::USR_SITELEVEL_NONE => Yii::t('models', 'None'),
        ];*/
    }

}
